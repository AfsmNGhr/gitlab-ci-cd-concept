#!/usr/bin/env bash

stack=${1:-example}
env=${2:-staging}
group=${3:-"$env"}
stacks="$(find services/* -maxdepth 1 -type d | awk -F/ '{print $NF}')"

prepare_stack () {
    source <(find "services/$stack" -type f -name '.env' -exec sed -E -n 's/[^#]+/export &/ p' {} +)

    service=".*\\/$stack"
    conf="\\.$env\\|\\.swarm"
    child=".*"
    regex="$service\\/\\($child\\)?docker-compose\\($conf\\)?\\.yml$"

    if [[ "$OSTYPE" == "darwin"* ]]; then
        cmd="find -E services/ -type f -regex $regex"
    else
        cmd="find services/ -type f -regextype posix-extended -regex $regex"
    fi

    files=$(sh -c "$cmd | xargs -I \"%\" echo '-f' \"%\" | tr '\\n' ' '")

    # WARNING: don't quote $files

    docker-compose $files config > docker-compose.stack.yml
}

sync_stack () {
    git="$(find "services/$stack" -name '.git*')"
    if [ -n "$git" ]; then
        git submodule update --init --remote --merge "services/$stack"
    fi
}

generate_stack_name () {
    if [ -n "$CI_COMMIT_REF_SLUG" ]; then
        stack_name="${CI_COMMIT_REF_SLUG}_${stack}"
    else
        stack_name="$stack"
    fi
}

cleanup () {
    rm -f docker-compose.stack.yml
}

deploy () {
    sync_stack
    prepare_stack
    generate_stack_name

    time ansible-playbook ansible/playbooks/deploy.yml -i "ansible/environments/$env" \
         -e "{\"group\": \"$group\", \"env\": \"$env\", \"stack\": \"$stack_name\"}"

    status_code="$?"
    [ "$status_code" != 0 ] && exit 1

    cleanup
}

help () {
    echo "Usage: $0"
    echo 'Default: *'
    echo 'Stacks: *example'
    echo ''
    echo "$stacks"
    echo ''
    echo 'Environments: *staging'
    exit 1
}

if [ ! -d "services/$stack" ]; then
    help
fi

echo -e "\nRUN [Deploy \"$stack\" stack & \"$env\" env to \"$group\" server(s) ...]\n"

# WARNING: don't delete quotes $stacks

for i in "$stacks"; do
    case "$i" in
        *$stack*)
            case "$env" in
                'staging'|'production')
                    deploy
                    ;;
                *)
                    help
                    ;;
            esac
            ;;
        *)
            help
            ;;
    esac
done
